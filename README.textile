h1. Miller-One

h2. Project Introduction

Receipts receipts receipts. I don't know about your side of the world, but we get receipts for everything we buy. I'm not complaining that we get receipts its just that they are on bits of paper. Why not get them electronically? In the mean-time I'm writing this but will be positioned for the eReceipts (r)evolution..

This project starts by dealing with paper receipts. From a user's perspective this will allow the receipts to be analysed, enabling displaying information such as:

* Show what was bought when and where (ie. showing individual shopping receipts)
* What items have been purchased in total
* .. what items are most popular (what do you buy most)
* .. how many of each was bought providing a picture over time
* .. show where your shopping money is going
* .. where you shop most (and where you shop all together)
* From a Cash Application perspective (MYOB, GNUCash, ...) this will enable the easy loading of data - perhaps even automated
* Enable integration with Shopping List applications users use on their smart devices when they go shopping
* Information can be shown about which shops in your area have specials on the items. To the point where Shopping Lists can be created to minimise travel
* Extend this to create an online order with those stores 

h2. Workflow

* Scan those receipts to PDF (indexed text version required)
* Electronic version analysed for date, time, store, location and each item on the the receipt.
* Store data to a database
* Reports view then used to display all possible information about your shopping (some of these views are listed above) 

For Miller, when eReceipts become a reality this will only mean skipping the scan to PDF step.

h2. Project stage Introduction

The project will be developed in stages.

h3. Stage One - Miller-One

This stage is to investigate some ideas including writing such an app in Django.

h2. Source documentation

Until this project is adopted by others I'm keeping the source documentation at "tintuna.com/Miller":http://tintuna.com/drupal/ProjectsAndCode/Miller.

h1. Installation, set-up and configuration

# Install python (installed by default on Linux and MacOSX). See Beginners guide to Python / download
# Install Django (most popular Python web application framework). See Django project
# git clone this - the URL is above
# If you want to open this in Eclipse, install PyDev Python IDE plugin for Eclipse
# If you are using PyDev:
## Right-click on the ==<code>miller-one</code>== project and choose ==<code>Django / Sync DB</code>== - to create the SQLLite database with required application tables **(I now think that this doesn't work through PyDev - the input isn't received to setup the Admin account.  You'll need to use the command-line)**
## Right-click on the ==<code>miller-one</code>== project and choose ==<code>Django / Custom command</code>== and add ==<code>runserver</code>== - to start the server (development only). I actually run runserver from the command-line anyway so I can see what's happening over there (rather than having to find the output window in Eclipse). See below. 
# If you aren't using PyDev (or want to run runserver from the command-line):
## ==<code>cd .../miller-one<br/>
python manage.py syncdb</code>== - to create the SQLLite database with required application tables
## ==<code>python manage.py runserver</code>== - to start the server (development only). 
# Visit "http://localhost:8000/shopping":http://localhost:8000/shopping or "http://localhost:8000/reports":http://localhost:8000/reports 
